# Generated by Django 5.0.6 on 2024-08-08 10:40

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, db_index=False, help_text='Slug for URL.', max_length=128, verbose_name='slug')),
                ('created_date', models.DateTimeField(auto_now_add=True, help_text='Date of creation', verbose_name='created at')),
                ('modified_date', models.DateTimeField(auto_now=True, help_text='Date of last modification', verbose_name='modified at')),
                ('is_active', models.BooleanField(default=True, help_text='Is active', verbose_name='active')),
                ('activation_date', models.DateTimeField(blank=True, help_text='Date of activation', null=True, verbose_name='activated at')),
                ('name', models.SlugField(help_text='Internal name of the experiment; Only letters, numbers, underscores or hyphens.', verbose_name='name')),
                ('title', models.CharField(help_text='Title of the experiment; visible to subjects who register.', max_length=50, verbose_name='title')),
                ('email', models.EmailField(help_text='This address will appear in autogenerated e-mails. Usually this will be the address to the person who registers the experiment in Expmotor.', max_length=254, verbose_name='inviter email')),
                ('phone', models.CharField(help_text='Phone number subjects can contact.', max_length=8, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '12345678'.", regex='^\\d{8}$')], verbose_name='phone')),
                ('registration_help', models.TextField(default='<p> This page lets you register for the experiment.</p>\n<p> You need to chose the session you would like to take part in and fill out the rest of the registration form.</p>\n', help_text='This text will meet subjects when they register.', verbose_name='registration instructions')),
                ('final_instructions', models.TextField(default='We confirm your participation in the experiment.\n    \nYou are registered for participation on {{ date }}, {{ time }} at {{ place }}.\n\nThe research group is grateful for your contribution,\nand it is important to us that you take part. \n\nShould you need to cancel, or get in touch with us for\nsome other reason, you can do so by email to {{ email }},\nor contact {{ manager }} by phone: {{ phone }}. \n\nOn behalf of the research group,\n{{ manager| title }}.\n', help_text='This message is sent to subjects after confirmation of their email address.', verbose_name='instructions mail')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiments', to=settings.AUTH_USER_MODEL, verbose_name='manager')),
            ],
            options={
                'verbose_name': 'experiment',
                'verbose_name_plural': 'experiments',
                'ordering': ['-created_date'],
                'get_latest_by': 'activation_date',
                'unique_together': {('manager', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, db_index=False, help_text='Slug for URL.', max_length=128, verbose_name='slug')),
                ('created_date', models.DateTimeField(auto_now_add=True, help_text='Date of creation', verbose_name='created at')),
                ('modified_date', models.DateTimeField(auto_now=True, help_text='Date of last modification', verbose_name='modified at')),
                ('is_active', models.BooleanField(default=True, help_text='Is active', verbose_name='active')),
                ('activation_date', models.DateTimeField(blank=True, help_text='Date of activation', null=True, verbose_name='activated at')),
                ('date', models.DateField(help_text='The date of the session.', verbose_name='session date.')),
                ('time', models.TimeField(help_text='The start time of the session.', verbose_name='session starting time.')),
                ('place', models.CharField(help_text='The place where session is organized.', max_length=50, verbose_name='session location.')),
                ('max_subjects', models.PositiveIntegerField(help_text='The maximal number of subjects that can register.', validators=[django.core.validators.MinValueValidator(limit_value=1, message='You must provide space for at least one subject.')], verbose_name='number of subjects.')),
                ('experiment', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='experiment.experiment', verbose_name='experiment')),
            ],
            options={
                'ordering': ['date', 'time'],
            },
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, db_index=False, help_text='Slug for URL.', max_length=128, verbose_name='slug')),
                ('created_date', models.DateTimeField(auto_now_add=True, help_text='Date of creation', verbose_name='created at')),
                ('modified_date', models.DateTimeField(auto_now=True, help_text='Date of last modification', verbose_name='modified at')),
                ('is_active', models.BooleanField(default=True, help_text='Is active', verbose_name='active')),
                ('activation_date', models.DateTimeField(blank=True, help_text='Date of activation', null=True, verbose_name='activated at')),
                ('first_name', models.CharField(help_text='Your first name.', max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(help_text='Your last name.', max_length=30, verbose_name='last name')),
                ('phone', models.CharField(help_text='Your phone number.', max_length=15, verbose_name='phone')),
                ('email', models.EmailField(help_text='An email will be sent to this address for validation purposes, you must click on a link in this email before registration is complete.', max_length=254, verbose_name='email')),
                ('confirmed_email', models.BooleanField(default=False, help_text='Set to "True" when e-mail is confirmed.')),
                ('session', models.ForeignKey(help_text='The session you sign up for.', on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='experiment.session', verbose_name='session')),
            ],
            options={
                'ordering': ['created_date'],
            },
        ),
    ]
