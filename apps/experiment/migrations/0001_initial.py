# Generated by Django 3.2.6 on 2021-10-08 08:32

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, db_index=False, help_text='Slug for URL.', max_length=128, verbose_name='slug')),
                ('created_date', models.DateTimeField(auto_now_add=True, help_text='Date of creation', verbose_name='created at')),
                ('modified_date', models.DateTimeField(auto_now=True, help_text='Date of last modification', verbose_name='modified at')),
                ('is_active', models.BooleanField(default=True, help_text='Is active', verbose_name='active')),
                ('activation_date', models.DateTimeField(blank=True, help_text='Date of activation', null=True, verbose_name='activated at')),
                ('name', models.CharField(help_text='Name of experiment; max 30 letters.', max_length=30, unique=True, verbose_name='name')),
                ('email', models.EmailField(help_text='This address will appear in autogenerated e-mails. Usually this will be the address to the person who registers the experiment in Expmotor.', max_length=254, verbose_name='inviter email')),
                ('phone', models.CharField(help_text="Invite manager's phone number.", max_length=8, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '12345678'.", regex='^\\d{8}$')], verbose_name='phone')),
                ('registration_help', models.TextField(default='\n    <p> This page lets you register for the experiment.</p>\n    <p> You need to tick off the session you would like to take part in.</p>\n', help_text='This text will meet participants when registering for participation.', verbose_name='registration mail')),
                ('confirmation_request', models.TextField(default='\n    You have registered for an experiment using "Expmotor". \n    Please confirm your email address by clicking on this link: \n    \n    http://127.0.0.1:8000{% url \'experiment:registration_activate\' uidb64=uid token=token  %}\n    \n    This is an auto-generated email.\n', help_text='Message in email asking subjects to confirm their email address.', verbose_name='confirmation mail')),
                ('final_instructions', models.TextField(default='\n    We confirm your participation in the experiment.\n    \n    You are registered for participation {{ date }} at {{ place }}, {{ time }}.\n    \n    The research group is grateful for your contribution,\n    and it is important to us that you take part. \n    \n    Should you need to cancel, or get in touch with us for\n    some other reason, you can do so by email to {{ manager.email }},\n    or contact {{ manager }} by phone: {{ manager.phone }}. \n    \n    On behalf of the research group,\n    {{ manager }}.\n', help_text='Message in email sent after confirmation of email address.', verbose_name='instructions mail')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiments', to=settings.AUTH_USER_MODEL, verbose_name='manager')),
            ],
            options={
                'verbose_name': 'experiment',
                'verbose_name_plural': 'experiments',
                'ordering': ['-created_date'],
                'get_latest_by': 'activation_date',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, db_index=False, help_text='Slug for URL.', max_length=128, verbose_name='slug')),
                ('created_date', models.DateTimeField(auto_now_add=True, help_text='Date of creation', verbose_name='created at')),
                ('modified_date', models.DateTimeField(auto_now=True, help_text='Date of last modification', verbose_name='modified at')),
                ('is_active', models.BooleanField(default=True, help_text='Is active', verbose_name='active')),
                ('activation_date', models.DateTimeField(blank=True, help_text='Date of activation', null=True, verbose_name='activated at')),
                ('date', models.DateField(help_text='The date of the session.', verbose_name='session date.')),
                ('time', models.TimeField(help_text='The start time of the session.', verbose_name='session starting time.')),
                ('place', models.CharField(help_text='The place where session is organized.', max_length=50, verbose_name='session location.')),
                ('max_subjects', models.PositiveIntegerField(help_text='The maximal number of participants that can register.', verbose_name='maximum number of subjects.')),
                ('experiment', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='experiment.experiment', verbose_name='experiment')),
            ],
            options={
                'ordering': ['-activation_date', '-created_date'],
                'get_latest_by': 'activation_date',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, db_index=False, help_text='Slug for URL.', max_length=128, verbose_name='slug')),
                ('created_date', models.DateTimeField(auto_now_add=True, help_text='Date of creation', verbose_name='created at')),
                ('modified_date', models.DateTimeField(auto_now=True, help_text='Date of last modification', verbose_name='modified at')),
                ('is_active', models.BooleanField(default=True, help_text='Is active', verbose_name='active')),
                ('activation_date', models.DateTimeField(blank=True, help_text='Date of activation', null=True, verbose_name='activated at')),
                ('first_name', models.CharField(help_text='Your first name.', max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(help_text='Your last name.', max_length=30, verbose_name='last name')),
                ('email', models.EmailField(help_text='An email will be sent to this address for validation purposes, you must click on a link in this email before registration is complete.', max_length=254, verbose_name='email')),
                ('phone', models.CharField(help_text='Your phone number.', max_length=15, verbose_name='phone')),
                ('confirmed_email', models.BooleanField(default=False, help_text='Set to "True" when e-mail is confirmed.')),
                ('activation_code', models.CharField(help_text='Unique id for identification', max_length=10)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='experiment.session', verbose_name='session')),
            ],
            options={
                'ordering': ['-activation_date', '-created_date'],
                'get_latest_by': 'activation_date',
                'abstract': False,
            },
        ),
    ]
